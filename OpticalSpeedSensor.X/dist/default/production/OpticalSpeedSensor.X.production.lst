

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Sep 30 17:05:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1825 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000E                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  010C                     	;# 
    95  010E                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011E                     	;# 
   109  018C                     	;# 
   110  018E                     	;# 
   111  0191                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  019F                     	;# 
   128  020C                     	;# 
   129  020E                     	;# 
   130  0211                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0212                     	;# 
   134  0213                     	;# 
   135  0213                     	;# 
   136  0214                     	;# 
   137  0214                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0217                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0298                     	;# 
   154  0298                     	;# 
   155  0299                     	;# 
   156  029A                     	;# 
   157  029B                     	;# 
   158  029C                     	;# 
   159  029D                     	;# 
   160  029E                     	;# 
   161  0311                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0318                     	;# 
   166  0318                     	;# 
   167  0319                     	;# 
   168  031A                     	;# 
   169  038C                     	;# 
   170  038E                     	;# 
   171  0391                     	;# 
   172  0392                     	;# 
   173  0393                     	;# 
   174  039A                     	;# 
   175  039C                     	;# 
   176  039D                     	;# 
   177  039E                     	;# 
   178  039F                     	;# 
   179  0415                     	;# 
   180  0416                     	;# 
   181  0417                     	;# 
   182  041C                     	;# 
   183  041D                     	;# 
   184  041E                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  008C                     	;# 
   225  008E                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0093                     	;# 
   229  0095                     	;# 
   230  0096                     	;# 
   231  0097                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009A                     	;# 
   235  009B                     	;# 
   236  009B                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  010C                     	;# 
   241  010E                     	;# 
   242  0111                     	;# 
   243  0112                     	;# 
   244  0113                     	;# 
   245  0114                     	;# 
   246  0115                     	;# 
   247  0116                     	;# 
   248  0117                     	;# 
   249  0118                     	;# 
   250  0119                     	;# 
   251  011A                     	;# 
   252  011B                     	;# 
   253  011D                     	;# 
   254  011E                     	;# 
   255  018C                     	;# 
   256  018E                     	;# 
   257  0191                     	;# 
   258  0191                     	;# 
   259  0192                     	;# 
   260  0193                     	;# 
   261  0193                     	;# 
   262  0193                     	;# 
   263  0194                     	;# 
   264  0195                     	;# 
   265  0196                     	;# 
   266  0199                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019C                     	;# 
   271  019D                     	;# 
   272  019E                     	;# 
   273  019F                     	;# 
   274  020C                     	;# 
   275  020E                     	;# 
   276  0211                     	;# 
   277  0211                     	;# 
   278  0212                     	;# 
   279  0212                     	;# 
   280  0213                     	;# 
   281  0213                     	;# 
   282  0214                     	;# 
   283  0214                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0216                     	;# 
   288  0216                     	;# 
   289  0217                     	;# 
   290  0217                     	;# 
   291  0291                     	;# 
   292  0291                     	;# 
   293  0292                     	;# 
   294  0293                     	;# 
   295  0294                     	;# 
   296  0295                     	;# 
   297  0295                     	;# 
   298  0296                     	;# 
   299  0298                     	;# 
   300  0298                     	;# 
   301  0299                     	;# 
   302  029A                     	;# 
   303  029B                     	;# 
   304  029C                     	;# 
   305  029D                     	;# 
   306  029E                     	;# 
   307  0311                     	;# 
   308  0311                     	;# 
   309  0312                     	;# 
   310  0313                     	;# 
   311  0318                     	;# 
   312  0318                     	;# 
   313  0319                     	;# 
   314  031A                     	;# 
   315  038C                     	;# 
   316  038E                     	;# 
   317  0391                     	;# 
   318  0392                     	;# 
   319  0393                     	;# 
   320  039A                     	;# 
   321  039C                     	;# 
   322  039D                     	;# 
   323  039E                     	;# 
   324  039F                     	;# 
   325  0415                     	;# 
   326  0416                     	;# 
   327  0417                     	;# 
   328  041C                     	;# 
   329  041D                     	;# 
   330  041E                     	;# 
   331  0FE4                     	;# 
   332  0FE5                     	;# 
   333  0FE6                     	;# 
   334  0FE7                     	;# 
   335  0FE8                     	;# 
   336  0FE9                     	;# 
   337  0FEA                     	;# 
   338  0FEB                     	;# 
   339  0FED                     	;# 
   340  0FEE                     	;# 
   341  0FEF                     	;# 
   342                           
   343                           	psect	nvBANK0
   344  0024                     __pnvBANK0:	
   345  0024                     _sCurrentState:	
   346  0024                     	ds	2
   347  0019                     _T1GCON	set	25
   348  0018                     _T1CONbits	set	24
   349  000C                     _PORTAbits	set	12
   350  000B                     _INTCONbits	set	11
   351  0016                     _TMR1L	set	22
   352  0017                     _TMR1H	set	23
   353  0011                     _PIR1bits	set	17
   354  000E                     _PORTCbits	set	14
   355  009B                     _ADRESL	set	155
   356  009C                     _ADRESH	set	156
   357  009D                     _ADCON0bits	set	157
   358  009E                     _ADCON1bits	set	158
   359  0091                     _PIE1bits	set	145
   360  008E                     _TRISCbits	set	142
   361  008C                     _TRISAbits	set	140
   362  0095                     _OPTION_REGbits	set	149
   363  0099                     _OSCCONbits	set	153
   364  0118                     _DACCON0	set	280
   365  010E                     _LATCbits	set	270
   366  010C                     _LATAbits	set	268
   367  0199                     _RCREG	set	409
   368  019D                     _RCSTAbits	set	413
   369  019A                     _TXREG	set	410
   370  019E                     _TXSTAbits	set	414
   371  019B                     _SPBRGL	set	411
   372  019C                     _SPBRGH	set	412
   373  019D                     _RCSTA	set	413
   374  019E                     _TXSTA	set	414
   375  019F                     _BAUDCON	set	415
   376  018E                     _ANSELCbits	set	398
   377  018C                     _ANSELAbits	set	396
   378  0215                     _SSP1CON1	set	533
   379  0214                     _SSP1STAT	set	532
   380  0211                     _SSP1BUF	set	529
   381  020E                     _WPUC	set	526
   382  020C                     _WPUA	set	524
   383                           
   384                           ; #config settings
   385  0000                     
   386                           	psect	cinit
   387  003E                     start_initialization:	
   388  003E                     __initialization:	
   389                           
   390                           ; Clear objects allocated to COMMON
   391  003E  01F0               	clrf	__pbssCOMMON& (0+127)
   392  003F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   393  0040  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   394  0041  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   395  0042  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   396  0043  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   397  0044  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   398  0045  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   399  0046  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   400                           
   401                           ; Clear objects allocated to BANK0
   402  0047  0020               	movlb	0	; select bank0
   403  0048  01A0               	clrf	__pbssBANK0& (0+127)
   404  0049  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   405  004A  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   406  004B  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   407  004C                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  004C                     __end_of__initialization:	
   411  004C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   412  004D  0020               	movlb	0
   413  004E  3180  2850         	ljmp	_main	;jump to C main() function
   414                           
   415                           	psect	bssCOMMON
   416  0070                     __pbssCOMMON:	
   417  0070                     _sGenTimer2:	
   418  0070                     	ds	2
   419  0072                     _sGenTimer1:	
   420  0072                     	ds	2
   421  0074                     _bADCLow:	
   422  0074                     	ds	1
   423  0075                     _bADCHigh:	
   424  0075                     	ds	1
   425  0076                     _bFlags_2:	
   426  0076                     	ds	1
   427  0077                     _bFlags_1:	
   428  0077                     	ds	1
   429  0078                     _bRisingEdges:	
   430  0078                     	ds	1
   431                           
   432                           	psect	bssBANK0
   433  0020                     __pbssBANK0:	
   434  0020                     _swCurrentADCVal:	
   435  0020                     	ds	2
   436  0022                     _sLastState:	
   437  0022                     	ds	2
   438                           
   439                           	psect	cstackCOMMON
   440  0079                     __pcstackCOMMON:	
   441  0079                     ?_Enable_External_Rising_Int:	
   442  0079                     ?_TMR1_Init:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0079                     ?_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0079                     ?_ISR_Routine:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0079                     ??_ISR_Routine:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 1 bytes @ 0x0
   456  0079                     	ds	1
   457  007A                     ??_Enable_External_Rising_Int:	
   458  007A                     ?_UART_Write:	
   459                           ; 1 bytes @ 0x1
   460                           
   461  007A                     ??_TMR1_Init:	
   462                           ; 1 bytes @ 0x1
   463                           
   464  007A                     UART_Write@data:	
   465                           ; 1 bytes @ 0x1
   466                           
   467                           
   468                           ; 2 bytes @ 0x1
   469  007A                     	ds	2
   470  007C                     ??_UART_Write:	
   471  007C                     ??_main:	
   472                           ; 1 bytes @ 0x3
   473                           
   474                           
   475                           ; 1 bytes @ 0x3
   476  007C                     	ds	1
   477                           
   478                           	psect	maintext
   479  0050                     __pmaintext:	
   480 ;;
   481 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   482 ;;
   483 ;; *************** function _main *****************
   484 ;; Defined at:
   485 ;;		line 65 in file "OpticalSpeedSensor.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : B1F/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   503 ;;Total ram usage:        1 bytes
   504 ;; Hardware stack levels required when called:    2
   505 ;; This function calls:
   506 ;;		_Enable_External_Rising_Int
   507 ;;		_TMR1_Init
   508 ;;		_UART_Write
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  0050                     _main:	
   517  0050                     l1088:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;OpticalSpeedSensor.c: 69:     OSCCONbits.SPLLEN=0x00;
   523  0050  0021               	movlb	1	; select bank1
   524  0051  1399               	bcf	25,7	;volatile
   525  0052                     l1090:	
   526                           
   527                           ;OpticalSpeedSensor.c: 70:     OSCCONbits.SCS=0x02;
   528  0052  0819               	movf	25,w	;volatile
   529  0053  39FC               	andlw	-4
   530  0054  3802               	iorlw	2
   531  0055  0099               	movwf	25	;volatile
   532                           
   533                           ;OpticalSpeedSensor.c: 71:     OSCCONbits.IRCF=0x0F;
   534  0056  3078               	movlw	120
   535  0057  0499               	iorwf	25,f	;volatile
   536  0058                     l1092:	
   537                           
   538                           ;OpticalSpeedSensor.c: 76:     OPTION_REGbits.nWPUEN = 0;
   539  0058  1395               	bcf	21,7	;volatile
   540  0059                     l1094:	
   541                           
   542                           ;OpticalSpeedSensor.c: 81:     ANSELAbits.ANSA0 = 0;
   543  0059  0023               	movlb	3	; select bank3
   544  005A  100C               	bcf	12,0	;volatile
   545  005B                     l1096:	
   546                           
   547                           ;OpticalSpeedSensor.c: 82:     ANSELAbits.ANSA1 = 0;
   548  005B  108C               	bcf	12,1	;volatile
   549  005C                     l1098:	
   550                           
   551                           ;OpticalSpeedSensor.c: 83:     ANSELAbits.ANSA2 = 0;
   552  005C  110C               	bcf	12,2	;volatile
   553  005D                     l1100:	
   554                           
   555                           ;OpticalSpeedSensor.c: 84:     ANSELAbits.ANSA4 = 0;
   556  005D  120C               	bcf	12,4	;volatile
   557  005E                     l1102:	
   558                           
   559                           ;OpticalSpeedSensor.c: 86:     WPUA = 0x00;
   560  005E  0024               	movlb	4	; select bank4
   561  005F  018C               	clrf	12	;volatile
   562  0060                     l1104:	
   563                           
   564                           ;OpticalSpeedSensor.c: 95:     TRISAbits.TRISA0 = 0;
   565  0060  0021               	movlb	1	; select bank1
   566  0061  100C               	bcf	12,0	;volatile
   567  0062                     l1106:	
   568                           
   569                           ;OpticalSpeedSensor.c: 96:     LATAbits.LATA0 = 0;
   570  0062  0022               	movlb	2	; select bank2
   571  0063  100C               	bcf	12,0	;volatile
   572  0064                     l1108:	
   573                           
   574                           ;OpticalSpeedSensor.c: 98:     TRISAbits.TRISA1 = 0;
   575  0064  0021               	movlb	1	; select bank1
   576  0065  108C               	bcf	12,1	;volatile
   577  0066                     l1110:	
   578                           
   579                           ;OpticalSpeedSensor.c: 99:     LATAbits.LATA1 = 0;
   580  0066  0022               	movlb	2	; select bank2
   581  0067  108C               	bcf	12,1	;volatile
   582  0068                     l1112:	
   583                           
   584                           ;OpticalSpeedSensor.c: 101:     TRISAbits.TRISA2 = 1;
   585  0068  0021               	movlb	1	; select bank1
   586  0069  150C               	bsf	12,2	;volatile
   587  006A                     l1114:	
   588                           
   589                           ;OpticalSpeedSensor.c: 104:     TRISAbits.TRISA3 = 1;
   590  006A  158C               	bsf	12,3	;volatile
   591  006B                     l1116:	
   592                           
   593                           ;OpticalSpeedSensor.c: 106:     TRISAbits.TRISA4 = 0;
   594  006B  120C               	bcf	12,4	;volatile
   595  006C                     l1118:	
   596                           
   597                           ;OpticalSpeedSensor.c: 107:     LATAbits.LATA4 = 1;
   598  006C  0022               	movlb	2	; select bank2
   599  006D  160C               	bsf	12,4	;volatile
   600  006E                     l1120:	
   601                           
   602                           ;OpticalSpeedSensor.c: 109:     TRISAbits.TRISA5 = 0;
   603  006E  0021               	movlb	1	; select bank1
   604  006F  128C               	bcf	12,5	;volatile
   605  0070                     l1122:	
   606                           
   607                           ;OpticalSpeedSensor.c: 110:     LATAbits.LATA5 = 1;
   608  0070  0022               	movlb	2	; select bank2
   609  0071  168C               	bsf	12,5	;volatile
   610  0072                     l1124:	
   611                           
   612                           ;OpticalSpeedSensor.c: 118:     ANSELCbits.ANSC0 = 0;
   613  0072  0023               	movlb	3	; select bank3
   614  0073  100E               	bcf	14,0	;volatile
   615  0074                     l1126:	
   616                           
   617                           ;OpticalSpeedSensor.c: 119:     ANSELCbits.ANSC1 = 0;
   618  0074  108E               	bcf	14,1	;volatile
   619  0075                     l1128:	
   620                           
   621                           ;OpticalSpeedSensor.c: 120:     ANSELCbits.ANSC2 = 0;
   622  0075  110E               	bcf	14,2	;volatile
   623  0076                     l1130:	
   624                           
   625                           ;OpticalSpeedSensor.c: 121:     ANSELCbits.ANSC3 = 0;
   626  0076  118E               	bcf	14,3	;volatile
   627  0077                     l1132:	
   628                           
   629                           ;OpticalSpeedSensor.c: 123:     WPUC = 0x00;
   630  0077  0024               	movlb	4	; select bank4
   631  0078  018E               	clrf	14	;volatile
   632  0079                     l1134:	
   633                           
   634                           ;OpticalSpeedSensor.c: 133:     TRISCbits.TRISC0 = 0;
   635  0079  0021               	movlb	1	; select bank1
   636  007A  100E               	bcf	14,0	;volatile
   637  007B                     l1136:	
   638                           
   639                           ;OpticalSpeedSensor.c: 134:     LATCbits.LATC0 = 0;
   640  007B  0022               	movlb	2	; select bank2
   641  007C  100E               	bcf	14,0	;volatile
   642  007D                     l1138:	
   643                           
   644                           ;OpticalSpeedSensor.c: 137:     TRISCbits.TRISC1 = 0;
   645  007D  0021               	movlb	1	; select bank1
   646  007E  108E               	bcf	14,1	;volatile
   647  007F                     l1140:	
   648                           
   649                           ;OpticalSpeedSensor.c: 138:     LATCbits.LATC1 = 0;
   650  007F  0022               	movlb	2	; select bank2
   651  0080  108E               	bcf	14,1	;volatile
   652  0081                     l1142:	
   653                           
   654                           ;OpticalSpeedSensor.c: 141:     TRISCbits.TRISC2 = 0;
   655  0081  0021               	movlb	1	; select bank1
   656  0082  110E               	bcf	14,2	;volatile
   657  0083                     l1144:	
   658                           
   659                           ;OpticalSpeedSensor.c: 142:     LATCbits.LATC2 = 0;
   660  0083  0022               	movlb	2	; select bank2
   661  0084  110E               	bcf	14,2	;volatile
   662  0085                     l1146:	
   663                           
   664                           ;OpticalSpeedSensor.c: 145:     TRISCbits.TRISC3 = 1;
   665  0085  0021               	movlb	1	; select bank1
   666  0086  158E               	bsf	14,3	;volatile
   667  0087                     l1148:	
   668                           
   669                           ;OpticalSpeedSensor.c: 148:     TRISCbits.TRISC4 = 0;
   670  0087  120E               	bcf	14,4	;volatile
   671  0088                     l1150:	
   672                           
   673                           ;OpticalSpeedSensor.c: 149:     LATCbits.LATC4 = 0;
   674  0088  0022               	movlb	2	; select bank2
   675  0089  120E               	bcf	14,4	;volatile
   676  008A                     l1152:	
   677                           
   678                           ;OpticalSpeedSensor.c: 152:     TRISCbits.TRISC5 = 0;
   679  008A  0021               	movlb	1	; select bank1
   680  008B  128E               	bcf	14,5	;volatile
   681  008C                     l1154:	
   682                           
   683                           ;OpticalSpeedSensor.c: 153:     LATCbits.LATC5 = 0;
   684  008C  0022               	movlb	2	; select bank2
   685  008D  128E               	bcf	14,5	;volatile
   686  008E                     l1156:	
   687                           
   688                           ;OpticalSpeedSensor.c: 162:     DACCON0 = 0;
   689  008E  0198               	clrf	24	;volatile
   690  008F                     l1158:	
   691                           
   692                           ;OpticalSpeedSensor.c: 184:     Enable_External_Rising_Int();
   693  008F  3181  2133  3180   	fcall	_Enable_External_Rising_Int
   694  0092                     l1160:	
   695                           
   696                           ;OpticalSpeedSensor.c: 186:     sCurrentState = 1;
   697  0092  3001               	movlw	1
   698  0093  0020               	movlb	0	; select bank0
   699  0094  00A4               	movwf	_sCurrentState
   700  0095  3000               	movlw	0
   701  0096  00A5               	movwf	_sCurrentState+1
   702  0097                     l1162:	
   703                           
   704                           ;OpticalSpeedSensor.c: 189:     if(PORTCbits.RC3 == 0)
   705  0097  080E               	movf	14,w	;volatile
   706  0098  2905               	goto	l1222
   707  0099                     l105:	
   708                           ;OpticalSpeedSensor.c: 190:     {;OpticalSpeedSensor.c: 192:     }
   709                           
   710  0099  2905               	goto	l1222
   711  009A                     l1164:	
   712                           
   713                           ;OpticalSpeedSensor.c: 205:                 bFlags_1 = 0;
   714  009A  01F7               	clrf	_bFlags_1
   715                           
   716                           ;OpticalSpeedSensor.c: 206:                 bFlags_2 = 0;
   717  009B  01F6               	clrf	_bFlags_2
   718  009C                     l1166:	
   719                           
   720                           ;OpticalSpeedSensor.c: 208:                 sLastState = 1;
   721  009C  3001               	movlw	1
   722  009D  00A2               	movwf	_sLastState
   723  009E  3000               	movlw	0
   724  009F  00A3               	movwf	_sLastState+1
   725  00A0                     l1168:	
   726                           
   727                           ;OpticalSpeedSensor.c: 209:                 sCurrentState = 2;
   728  00A0  3002               	movlw	2
   729  00A1  00A4               	movwf	_sCurrentState
   730  00A2  3000               	movlw	0
   731  00A3  00A5               	movwf	_sCurrentState+1
   732                           
   733                           ;OpticalSpeedSensor.c: 211:             break;
   734  00A4  2905               	goto	l1222
   735  00A5                     l1174:	
   736                           
   737                           ;OpticalSpeedSensor.c: 235:                 SSP1BUF = 0;
   738  00A5  0024               	movlb	4	; select bank4
   739  00A6  0191               	clrf	17	;volatile
   740  00A7                     l1176:	
   741                           
   742                           ;OpticalSpeedSensor.c: 236:                 PIR1bits.SSP1IF = 0;
   743  00A7  0020               	movlb	0	; select bank0
   744  00A8  1191               	bcf	17,3	;volatile
   745  00A9                     l1178:	
   746                           
   747                           ;OpticalSpeedSensor.c: 238:                 sLastState = 3;
   748  00A9  3003               	movlw	3
   749  00AA  00A2               	movwf	_sLastState
   750  00AB  3000               	movlw	0
   751  00AC  00A3               	movwf	_sLastState+1
   752  00AD                     l1180:	
   753                           
   754                           ;OpticalSpeedSensor.c: 239:                 sCurrentState = 4;
   755  00AD  3004               	movlw	4
   756  00AE  00A4               	movwf	_sCurrentState
   757  00AF  3000               	movlw	0
   758  00B0  00A5               	movwf	_sCurrentState+1
   759                           
   760                           ;OpticalSpeedSensor.c: 240:             break;
   761  00B1  2905               	goto	l1222
   762  00B2                     l114:	
   763                           ;OpticalSpeedSensor.c: 245:             case 4:
   764                           
   765                           
   766                           ;OpticalSpeedSensor.c: 247:                 if(PIR1bits.SSP1IF)
   767  00B2  1D91               	btfss	17,3	;volatile
   768  00B3  28B5               	goto	u171
   769  00B4  28B6               	goto	u170
   770  00B5                     u171:	
   771  00B5  2905               	goto	l1222
   772  00B6                     u170:	
   773  00B6                     l1182:	
   774                           
   775                           ;OpticalSpeedSensor.c: 248:                 {;OpticalSpeedSensor.c: 250:                
      +                               PIR1bits.SSP1IF = 0;
   776  00B6  1191               	bcf	17,3	;volatile
   777  00B7                     l1188:	
   778                           ;OpticalSpeedSensor.c: 252:                     if (0)
   779                           
   780                           
   781                           ;OpticalSpeedSensor.c: 262:                     {;OpticalSpeedSensor.c: 263:            
      +                                       ((bFlags_1) &= ((~(0x08))));
   782  00B7  30F7               	movlw	247
   783  00B8  00FC               	movwf	??_main
   784  00B9  087C               	movf	??_main,w
   785  00BA  05F7               	andwf	_bFlags_1,f
   786  00BB  2905               	goto	l1222
   787  00BC                     l118:	
   788                           ;OpticalSpeedSensor.c: 273:             case 5:
   789                           
   790                           
   791                           ;OpticalSpeedSensor.c: 275:                 if( (((bFlags_1) & (0x08)) != 0) )
   792  00BC  1DF7               	btfss	_bFlags_1,3
   793  00BD  28BF               	goto	u181
   794  00BE  28C0               	goto	u180
   795  00BF                     u181:	
   796  00BF  2905               	goto	l1222
   797  00C0                     u180:	
   798  00C0                     l1190:	
   799                           
   800                           ;OpticalSpeedSensor.c: 276:                 {;OpticalSpeedSensor.c: 278:                
      +                               UART_Write(0x0A);
   801  00C0  300A               	movlw	10
   802  00C1  00FA               	movwf	UART_Write@data
   803  00C2  3000               	movlw	0
   804  00C3  00FB               	movwf	UART_Write@data+1
   805  00C4  3181  212B  3180   	fcall	_UART_Write
   806                           
   807                           ;OpticalSpeedSensor.c: 279:                     UART_Write(0x0D);
   808  00C7  300D               	movlw	13
   809  00C8  00FA               	movwf	UART_Write@data
   810  00C9  3000               	movlw	0
   811  00CA  00FB               	movwf	UART_Write@data+1
   812  00CB  3181  212B  3180   	fcall	_UART_Write
   813  00CE                     l1192:	
   814                           
   815                           ;OpticalSpeedSensor.c: 281:                     ((bFlags_1) &= ((~(0x08))));
   816  00CE  30F7               	movlw	247
   817  00CF  00FC               	movwf	??_main
   818  00D0  087C               	movf	??_main,w
   819  00D1  05F7               	andwf	_bFlags_1,f
   820  00D2                     l1194:	
   821                           
   822                           ;OpticalSpeedSensor.c: 283:                     sLastState = 5;
   823  00D2  3005               	movlw	5
   824  00D3  0020               	movlb	0	; select bank0
   825  00D4  00A2               	movwf	_sLastState
   826  00D5  3000               	movlw	0
   827  00D6  00A3               	movwf	_sLastState+1
   828  00D7                     l1196:	
   829                           
   830                           ;OpticalSpeedSensor.c: 284:                     sCurrentState = 6;
   831  00D7  3006               	movlw	6
   832  00D8  0020               	movlb	0	; select bank0
   833  00D9  00A4               	movwf	_sCurrentState
   834  00DA  3000               	movlw	0
   835  00DB  00A5               	movwf	_sCurrentState+1
   836  00DC  2905               	goto	l1222
   837  00DD                     l120:	
   838                           ;OpticalSpeedSensor.c: 292:             case 6:
   839                           
   840                           
   841                           ;OpticalSpeedSensor.c: 294:                 if( ((((bFlags_1) & (0x10)) != 0) && (sGenTi
      +                          mer1 == 0)) )
   842  00DD  1E77               	btfss	_bFlags_1,4
   843  00DE  28E0               	goto	u191
   844  00DF  28E1               	goto	u190
   845  00E0                     u191:	
   846  00E0  2905               	goto	l1222
   847  00E1                     u190:	
   848  00E1                     l1198:	
   849  00E1  0872               	movf	_sGenTimer1,w
   850  00E2  0473               	iorwf	_sGenTimer1+1,w
   851  00E3  1D03               	btfss	3,2
   852  00E4  28E6               	goto	u201
   853  00E5  28E7               	goto	u200
   854  00E6                     u201:	
   855  00E6  2905               	goto	l1222
   856  00E7                     u200:	
   857  00E7                     l1200:	
   858                           
   859                           ;OpticalSpeedSensor.c: 295:                 {;OpticalSpeedSensor.c: 296:                
      +                               if((((bFlags_1) & (0x04)) != 0))
   860  00E7  1D77               	btfss	_bFlags_1,2
   861  00E8  28EA               	goto	u211
   862  00E9  28EB               	goto	u210
   863  00EA                     u211:	
   864  00EA  28F4               	goto	l1206
   865  00EB                     u210:	
   866  00EB                     l1202:	
   867                           
   868                           ;OpticalSpeedSensor.c: 297:                     {;OpticalSpeedSensor.c: 299:            
      +                                       sGenTimer1 = 250;
   869  00EB  30FA               	movlw	250
   870  00EC  00F2               	movwf	_sGenTimer1
   871  00ED  3000               	movlw	0
   872  00EE  00F3               	movwf	_sGenTimer1+1
   873  00EF                     l1204:	
   874                           
   875                           ;OpticalSpeedSensor.c: 300:                         ((bFlags_1) &= ((~(0x04))));
   876  00EF  30FB               	movlw	251
   877  00F0  00FC               	movwf	??_main
   878  00F1  087C               	movf	??_main,w
   879  00F2  05F7               	andwf	_bFlags_1,f
   880                           
   881                           ;OpticalSpeedSensor.c: 301:                     }
   882  00F3  2905               	goto	l1222
   883  00F4                     l1206:	
   884                           
   885                           ;OpticalSpeedSensor.c: 303:                     {;OpticalSpeedSensor.c: 305:            
      +                                       sGenTimer1 = 250;
   886  00F4  30FA               	movlw	250
   887  00F5  00F2               	movwf	_sGenTimer1
   888  00F6  3000               	movlw	0
   889  00F7  00F3               	movwf	_sGenTimer1+1
   890  00F8                     l1208:	
   891                           
   892                           ;OpticalSpeedSensor.c: 306:                         ((bFlags_1) |= (0x04));
   893  00F8  1577               	bsf	_bFlags_1,2
   894  00F9  2905               	goto	l1222
   895  00FA                     l1210:	
   896                           
   897                           ;OpticalSpeedSensor.c: 316:                 TMR1_Init();
   898  00FA  3181  2120  3180   	fcall	_TMR1_Init
   899  00FD                     l1212:	
   900                           
   901                           ;OpticalSpeedSensor.c: 317:                 PIE1bits.TMR1IE = 1;
   902  00FD  0021               	movlb	1	; select bank1
   903  00FE  1411               	bsf	17,0	;volatile
   904  00FF                     l1214:	
   905                           
   906                           ;OpticalSpeedSensor.c: 318:                 ((bFlags_1) |= (0x10));
   907  00FF  1677               	bsf	_bFlags_1,4
   908  0100                     l1216:	
   909                           
   910                           ;OpticalSpeedSensor.c: 319:                 ((bFlags_1) &= ((~(0x04))));
   911  0100  30FB               	movlw	251
   912  0101  00FC               	movwf	??_main
   913  0102  087C               	movf	??_main,w
   914  0103  05F7               	andwf	_bFlags_1,f
   915  0104  28D7               	goto	l1196
   916  0105                     l1222:	
   917                           
   918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ; direct_byte            8     6 (fixed)
   925                           ; jumptable            260     6 (fixed)
   926                           ;	Chosen strategy is simple_byte
   927  0105  0825               	movf	_sCurrentState+1,w
   928  0106  3A00               	xorlw	0	; case 0
   929  0107  1903               	skipnz
   930  0108  290A               	goto	l1260
   931  0109  28FA               	goto	l1210
   932  010A                     l1260:	
   933                           
   934                           ; Switch size 1, requested type "simple"
   935                           ; Number of cases is 6, Range of values is 1 to 6
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte           19    10 (average)
   939                           ; direct_byte           21     9 (fixed)
   940                           ; jumptable            263     9 (fixed)
   941                           ;	Chosen strategy is simple_byte
   942  010A  0824               	movf	_sCurrentState,w
   943  010B  3A01               	xorlw	1	; case 1
   944  010C  1903               	skipnz
   945  010D  289A               	goto	l1164
   946  010E  3A03               	xorlw	3	; case 2
   947  010F  1903               	skipnz
   948  0110  2899               	goto	l105
   949  0111  3A01               	xorlw	1	; case 3
   950  0112  1903               	skipnz
   951  0113  28A5               	goto	l1174
   952  0114  3A07               	xorlw	7	; case 4
   953  0115  1903               	skipnz
   954  0116  28B2               	goto	l114
   955  0117  3A01               	xorlw	1	; case 5
   956  0118  1903               	skipnz
   957  0119  28BC               	goto	l118
   958  011A  3A03               	xorlw	3	; case 6
   959  011B  1903               	skipnz
   960  011C  28DD               	goto	l120
   961  011D  28FA               	goto	l1210
   962  011E  3180  283C         	ljmp	start
   963  0120                     __end_of_main:	
   964                           
   965                           	psect	text1
   966  012B                     __ptext1:	
   967 ;; *************** function _UART_Write *****************
   968 ;; Defined at:
   969 ;;		line 638 in file "OpticalSpeedSensor.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  data            2    1[COMMON] unsigned short 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   987 ;;Total ram usage:        2 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _UART_Write
   999  012B                     _UART_Write:	
  1000  012B                     l1072:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _UART_Write: [wreg]
  1003                           
  1004  012B                     l155:	
  1005                           ;OpticalSpeedSensor.c: 638: void UART_Write( unsigned short data);OpticalSpeedSensor.c: 
      +                          639: {;OpticalSpeedSensor.c: 641:     while(!TXSTAbits.TRMT);
  1006                           
  1007  012B  0023               	movlb	3	; select bank3
  1008  012C  1C9E               	btfss	30,1	;volatile
  1009  012D  292F               	goto	u161
  1010  012E  2930               	goto	u160
  1011  012F                     u161:	
  1012  012F  292B               	goto	l155
  1013  0130                     u160:	
  1014  0130                     l1074:	
  1015                           
  1016                           ;OpticalSpeedSensor.c: 642:     TXREG = data;
  1017  0130  087A               	movf	UART_Write@data,w
  1018  0131  009A               	movwf	26	;volatile
  1019  0132                     l158:	
  1020  0132  0008               	return
  1021  0133                     __end_of_UART_Write:	
  1022                           
  1023                           	psect	text2
  1024  0120                     __ptext2:	
  1025 ;; *************** function _TMR1_Init *****************
  1026 ;; Defined at:
  1027 ;;		line 434 in file "OpticalSpeedSensor.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    1
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _TMR1_Init
  1057  0120                     _TMR1_Init:	
  1058  0120                     l1076:	
  1059                           ;incstack = 0
  1060                           ; Regs used in _TMR1_Init: [wreg+status,2+status,0]
  1061                           
  1062                           
  1063                           ;OpticalSpeedSensor.c: 439:     T1CONbits.TMR1CS = 0;
  1064  0120  303F               	movlw	-193
  1065  0121  0020               	movlb	0	; select bank0
  1066  0122  0598               	andwf	24,f	;volatile
  1067                           
  1068                           ;OpticalSpeedSensor.c: 440:     T1CONbits.T1CKPS = 3;
  1069  0123  3030               	movlw	48
  1070  0124  0498               	iorwf	24,f	;volatile
  1071  0125                     l1078:	
  1072                           
  1073                           ;OpticalSpeedSensor.c: 441:     T1CONbits.T1OSCEN = 0;
  1074  0125  1198               	bcf	24,3	;volatile
  1075  0126                     l1080:	
  1076                           
  1077                           ;OpticalSpeedSensor.c: 442:     T1CONbits.nT1SYNC = 1;
  1078  0126  1518               	bsf	24,2	;volatile
  1079  0127                     l1082:	
  1080                           
  1081                           ;OpticalSpeedSensor.c: 443:     T1CONbits.TMR1ON = 1;
  1082  0127  1418               	bsf	24,0	;volatile
  1083  0128                     l1084:	
  1084                           
  1085                           ;OpticalSpeedSensor.c: 446:     T1GCON = 0;
  1086  0128  0199               	clrf	25	;volatile
  1087  0129                     l1086:	
  1088                           
  1089                           ;OpticalSpeedSensor.c: 464:     PIR1bits.TMR1IF = 0;
  1090  0129  1011               	bcf	17,0	;volatile
  1091  012A                     l140:	
  1092  012A  0008               	return
  1093  012B                     __end_of_TMR1_Init:	
  1094                           
  1095                           	psect	text3
  1096  0133                     __ptext3:	
  1097 ;; *************** function _Enable_External_Rising_Int *****************
  1098 ;; Defined at:
  1099 ;;		line 686 in file "OpticalSpeedSensor.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		None
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _Enable_External_Rising_Int
  1129  0133                     _Enable_External_Rising_Int:	
  1130  0133                     l1070:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _Enable_External_Rising_Int: []
  1133                           
  1134                           
  1135                           ;OpticalSpeedSensor.c: 688:     OPTION_REGbits.INTEDG = 1;
  1136  0133  0021               	movlb	1	; select bank1
  1137  0134  1715               	bsf	21,6	;volatile
  1138                           
  1139                           ;OpticalSpeedSensor.c: 689:     INTCONbits.INTF = 0;
  1140  0135  108B               	bcf	11,1	;volatile
  1141                           
  1142                           ;OpticalSpeedSensor.c: 690:     INTCONbits.INTE = 1;
  1143  0136  160B               	bsf	11,4	;volatile
  1144  0137                     l174:	
  1145  0137  0008               	return
  1146  0138                     __end_of_Enable_External_Rising_Int:	
  1147                           
  1148                           	psect	intentry
  1149  0004                     __pintentry:	
  1150 ;; *************** function _ISR_Routine *****************
  1151 ;; Defined at:
  1152 ;;		line 358 in file "OpticalSpeedSensor.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1170 ;;Total ram usage:        1 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		Interrupt level 1
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179  0004                     _ISR_Routine:	
  1180                           
  1181                           ;incstack = 0
  1182  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1183                           
  1184                           ; Regs used in _ISR_Routine: [wreg+status,2+status,0]
  1185  0005  3180               	pagesel	$
  1186  0006                     i1l956:	
  1187                           
  1188                           ;OpticalSpeedSensor.c: 361:     if (PIR1bits.TMR1IF)
  1189  0006  0020               	movlb	0	; select bank0
  1190  0007  1C11               	btfss	17,0	;volatile
  1191  0008  280A               	goto	u7_21
  1192  0009  280B               	goto	u7_20
  1193  000A                     u7_21:	
  1194  000A  2824               	goto	i1l970
  1195  000B                     u7_20:	
  1196  000B                     i1l958:	
  1197                           
  1198                           ;OpticalSpeedSensor.c: 362:     {;OpticalSpeedSensor.c: 373:         TMR1H = 0xFC;
  1199  000B  30FC               	movlw	252
  1200  000C  0097               	movwf	23	;volatile
  1201                           
  1202                           ;OpticalSpeedSensor.c: 374:         TMR1L = 0x18;
  1203  000D  3018               	movlw	24
  1204  000E  0096               	movwf	22	;volatile
  1205  000F                     i1l960:	
  1206                           
  1207                           ;OpticalSpeedSensor.c: 377:         if(sGenTimer1)
  1208  000F  0872               	movf	_sGenTimer1,w
  1209  0010  0473               	iorwf	_sGenTimer1+1,w
  1210  0011  1903               	btfsc	3,2
  1211  0012  2814               	goto	u8_21
  1212  0013  2815               	goto	u8_20
  1213  0014                     u8_21:	
  1214  0014  2819               	goto	i1l964
  1215  0015                     u8_20:	
  1216  0015                     i1l962:	
  1217                           
  1218                           ;OpticalSpeedSensor.c: 378:             sGenTimer1--;
  1219  0015  3001               	movlw	1
  1220  0016  02F2               	subwf	_sGenTimer1,f
  1221  0017  3000               	movlw	0
  1222  0018  3BF3               	subwfb	_sGenTimer1+1,f
  1223  0019                     i1l964:	
  1224                           
  1225                           ;OpticalSpeedSensor.c: 380:         if(sGenTimer2)
  1226  0019  0870               	movf	_sGenTimer2,w
  1227  001A  0471               	iorwf	_sGenTimer2+1,w
  1228  001B  1903               	btfsc	3,2
  1229  001C  281E               	goto	u9_21
  1230  001D  281F               	goto	u9_20
  1231  001E                     u9_21:	
  1232  001E  2823               	goto	i1l968
  1233  001F                     u9_20:	
  1234  001F                     i1l966:	
  1235                           
  1236                           ;OpticalSpeedSensor.c: 381:             sGenTimer2--;
  1237  001F  3001               	movlw	1
  1238  0020  02F0               	subwf	_sGenTimer2,f
  1239  0021  3000               	movlw	0
  1240  0022  3BF1               	subwfb	_sGenTimer2+1,f
  1241  0023                     i1l968:	
  1242                           
  1243                           ;OpticalSpeedSensor.c: 384:         PIR1bits.TMR1IF = 0;
  1244  0023  1011               	bcf	17,0	;volatile
  1245  0024                     i1l970:	
  1246                           
  1247                           ;OpticalSpeedSensor.c: 392:     if (INTCONbits.INTF)
  1248  0024  1C8B               	btfss	11,1	;volatile
  1249  0025  2827               	goto	u10_21
  1250  0026  2828               	goto	u10_20
  1251  0027                     u10_21:	
  1252  0027  283A               	goto	i1l137
  1253  0028                     u10_20:	
  1254  0028                     i1l972:	
  1255                           
  1256                           ;OpticalSpeedSensor.c: 393:     {;OpticalSpeedSensor.c: 396:         _delay((unsigned lo
      +                          ng)((10)*(16000000/4000.0)));
  1257  0028  3034               	movlw	52
  1258  0029  00F9               	movwf	??_ISR_Routine
  1259  002A  30F2               	movlw	242
  1260  002B                     u22_27:	
  1261  002B  0B89               	decfsz	9,f
  1262  002C  282B               	goto	u22_27
  1263  002D  0BF9               	decfsz	??_ISR_Routine,f
  1264  002E  282B               	goto	u22_27
  1265  002F                     i1l974:	
  1266                           
  1267                           ;OpticalSpeedSensor.c: 399:         if(PORTAbits.RA2)
  1268  002F  0020               	movlb	0	; select bank0
  1269  0030  1D0C               	btfss	12,2	;volatile
  1270  0031  2833               	goto	u11_21
  1271  0032  2834               	goto	u11_20
  1272  0033                     u11_21:	
  1273  0033  2839               	goto	i1l980
  1274  0034                     u11_20:	
  1275  0034                     i1l976:	
  1276                           
  1277                           ;OpticalSpeedSensor.c: 400:         {;OpticalSpeedSensor.c: 401:             bRisingEdge
      +                          s++;
  1278  0034  3001               	movlw	1
  1279  0035  00F9               	movwf	??_ISR_Routine
  1280  0036  0879               	movf	??_ISR_Routine,w
  1281  0037  07F8               	addwf	_bRisingEdges,f
  1282  0038                     i1l978:	
  1283                           
  1284                           ;OpticalSpeedSensor.c: 403:             ((bFlags_1) |= (0x08));
  1285  0038  15F7               	bsf	_bFlags_1,3
  1286  0039                     i1l980:	
  1287                           
  1288                           ;OpticalSpeedSensor.c: 413:         INTCONbits.INTF = 0;
  1289  0039  108B               	bcf	11,1	;volatile
  1290  003A                     i1l137:	
  1291  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1292  003B  0009               	retfie
  1293  003C                     __end_of_ISR_Routine:	
  1294  007E                     btemp	set	126	;btemp
  1295  007E                     int$flags	set	126
  1296  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      13
    BANK0            80      0       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write

Critical Paths under _ISR_Routine in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_Routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Routine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Routine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Routine in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Routine in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Routine in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Routine in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Routine in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Routine in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     174
                                              3 COMMON     1     1      0
         _Enable_External_Rising_Int
                          _TMR1_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Enable_External_Rising_Int                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_Routine                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Enable_External_Rising_Int
   _TMR1_Init
   _UART_Write

 _ISR_Routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       6       5        7.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      13      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      13      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Sep 30 17:05:28 2020

                        __CFG_CP$OFF 0000                                  l120 00DD  
                                l105 0099                                  l114 00B2  
                                l140 012A                                  l118 00BC  
                                l155 012B                                  l174 0137  
                                l158 0132                                  u200 00E7  
                                u201 00E6                                  u210 00EB  
                                u211 00EA                                  u160 0130  
                                u161 012F                                  u170 00B6  
                                u171 00B5                                  u180 00C0  
                                u181 00BF                                  u190 00E1  
                                u191 00E0                         __CFG_CPD$OFF 0000  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_LVP$OFF 0000                                 l1100 005D  
                               l1110 0066                                 l1102 005E  
                               l1200 00E7                                 l1120 006E  
                               l1112 0068                                 l1104 0060  
                               l1210 00FA                                 l1202 00EB  
                               l1130 0076                                 l1122 0070  
                               l1114 006A                                 l1106 0062  
                               l1212 00FD                                 l1204 00EF  
                               l1140 007F                                 l1132 0077  
                               l1124 0072                                 l1116 006B  
                               l1108 0064                                 l1070 0133  
                               l1214 00FF                                 l1206 00F4  
                               l1222 0105                                 l1150 0088  
                               l1142 0081                                 l1134 0079  
                               l1126 0074                                 l1118 006C  
                               l1080 0126                                 l1072 012B  
                               l1216 0100                                 l1208 00F8  
                               l1160 0092                                 l1152 008A  
                               l1144 0083                                 l1136 007B  
                               l1128 0075                                 l1082 0127  
                               l1074 0130                                 l1162 0097  
                               l1154 008C                                 l1146 0085  
                               l1138 007D                                 l1090 0052  
                               l1084 0128                                 l1076 0120  
                               l1260 010A                                 l1180 00AD  
                               l1164 009A                                 l1156 008E  
                               l1148 0087                                 l1092 0058  
                               l1086 0129                                 l1078 0125  
                               l1190 00C0                                 l1182 00B6  
                               l1174 00A5                                 l1166 009C  
                               l1158 008F                                 l1094 0059  
                               l1192 00CE                                 l1176 00A7  
                               l1168 00A0                                 l1096 005B  
                               l1088 0050                                 l1194 00D2  
                               l1178 00A9                                 l1098 005C  
                               l1196 00D7                                 l1188 00B7  
                               l1198 00E1                                 _WPUA 020C  
                               _WPUC 020E                                 u7_20 000B  
                               u7_21 000A                                 u8_20 0015  
                               u8_21 0014                                 u9_20 001F  
                               u9_21 001E                         __CFG_WRT$OFF 0000  
                               _main 0050                                 btemp 007E  
                               start 003C                        __CFG_IESO$OFF 0000  
                              ?_main 0079                        __CFG_WDTE$OFF 0000  
                              i1l137 003A                                i1l960 000F  
                              i1l962 0015                                i1l970 0024  
                              i1l980 0039                                i1l972 0028  
                              i1l964 0019                                i1l956 0006  
                              i1l974 002F                                i1l966 001F  
                              i1l958 000B                                i1l976 0034  
                              i1l968 0023                                i1l978 0038  
                              _RCREG 0199                                u10_20 0028  
                              u10_21 0027                                u11_20 0034  
                              u11_21 0033                                _RCSTA 019D  
                              u22_27 002B                                _TMR1H 0017  
                              _TMR1L 0016                                _TXREG 019A  
                              _TXSTA 019E                       __CFG_FCMEN$OFF 0000  
                        ?_UART_Write 007A                   __size_of_TMR1_Init 000B  
                     __CFG_BOREN$OFF 0000                                status 0003  
                              wtemp0 007E         ??_Enable_External_Rising_Int 007A  
                     __CFG_MCLRE$OFF 0000                      __initialization 003E  
                       __end_of_main 0120                               ??_main 007C  
                     __CFG_PLLEN$OFF 0000                               _ADRESH 009C  
                       ?_ISR_Routine 0079                               _ADRESL 009B  
                             _T1GCON 0019                               _SPBRGH 019C  
                             _SPBRGL 019B                       __CFG_PWRTE$OFF 0000  
                  __end_of_TMR1_Init 012B                  __size_of_UART_Write 0008  
                     __CFG_STVREN$ON 0000              __end_of__initialization 004C  
                     __pcstackCOMMON 0079                       _OPTION_REGbits 0095  
                         _sGenTimer1 0072                           _sGenTimer2 0070  
                         __pbssBANK0 0020   __end_of_Enable_External_Rising_Int 0138  
         _Enable_External_Rising_Int 0133                           __pmaintext 0050  
                         _sLastState 0022                           __pintentry 0004  
                            _DACCON0 0118                              _BAUDCON 019F  
                       ??_UART_Write 007C                              _SSP1BUF 0211  
                            _bADCLow 0074                 __size_of_ISR_Routine 0038  
                 __end_of_UART_Write 0133                              __ptext1 012B  
                            __ptext2 0120                              __ptext3 0133  
                          _T1CONbits 0018                 end_of_initialization 004C  
                          _RCSTAbits 019D                            _TMR1_Init 0120  
                          _PORTAbits 000C                            _PORTCbits 000E  
                     UART_Write@data 007A                     __CFG_FOSC$INTOSC 0000  
                          _TRISAbits 008C                            _TRISCbits 008E  
                          _TXSTAbits 019E                           ?_TMR1_Init 0079  
                start_initialization 003E          ?_Enable_External_Rising_Int 0079  
                        __pbssCOMMON 0070                            ___latbits 0002  
                          __pnvBANK0 0024                          ??_TMR1_Init 007A  
                      ??_ISR_Routine 0079                             _LATAbits 010C  
                           _LATCbits 010E                             _PIE1bits 0091  
                           _PIR1bits 0011                             _SSP1CON1 0215  
                           _SSP1STAT 0214                           _ADCON0bits 009D  
                         _ADCON1bits 009E                             _bADCHigh 0075  
__size_of_Enable_External_Rising_Int 0005                        _sCurrentState 0024  
                __end_of_ISR_Routine 003C                             _bFlags_1 0077  
                           _bFlags_2 0076                           _ANSELAbits 018C  
                         _ANSELCbits 018E                        __size_of_main 00D0  
                           int$flags 007E                           _INTCONbits 000B  
                        _ISR_Routine 0004                             intlevel1 0000  
                  __CFG_CLKOUTEN$OFF 0000                           _OSCCONbits 0099  
                       _bRisingEdges 0078                           _UART_Write 012B  
                    _swCurrentADCVal 0020  
